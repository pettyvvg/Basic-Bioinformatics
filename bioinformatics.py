# -*- coding: utf-8 -*-
"""bioinformatics 4011 4012 4014.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dnNlMD2PEbBdt5RTMdtrk5f-S0MhlBOB
"""

#Please upload file into your colab before running the code
#from google.colab import files #or delete hashtage on line 2 and 3 if you would like to use the upload function
#uploaded = files.upload()

class TrieNode:
    def __init__(self):
        self.children = {}
        self.is_terminal = False

def insert_into_trie(root, sequence):
    node = root
    for char in sequence.upper():
        if char not in node.children:
            node.children[char] = TrieNode()
        node = node.children[char]
    node.is_terminal = True

def search_corpus_chunk(corpus_chunk, root, chromosome, results, start_index=0):
    i = 0
    while i < len(corpus_chunk):
        if corpus_chunk[i].upper() == 'N':  # Skip unknown regions marked by 'N'
            i += 1
            continue

        j = i
        pn = root
        while j < len(corpus_chunk):
            char = corpus_chunk[j].upper()
            if char not in pn.children:
                break
            pn = pn.children[char]
            j += 1

            if pn.is_terminal:
                match_sequence = corpus_chunk[i:j].upper()
                hex_index = f"{start_index + i:08X}"

                # Append results in desired grouped format
                if match_sequence not in results:
                    results[match_sequence] = []
                results[match_sequence].append(f"{hex_index} {chromosome}")

                i = j  # Move 'i' to the end of the matched sequence
                break
        else:
            i += 1  # Increment i if no match was found
            continue

        i += 1

def main():
    trie_root = TrieNode()
    with open("targets.txt", "r") as targets_file:
        for line in targets_file:
            target_sequence = line.strip()
            insert_into_trie(trie_root, target_sequence)

    chromosomes = ["chr19.dna", "chr20.dna", "chr21.dna"]
    results = {}  # Store matches grouped by sequence

    with open("output.txt", "w") as output_file:
        for chromosome in chromosomes:
            with open(chromosome, "r") as corpus_file:
                chunk_size = 1024 * 1024  # Read in 1MB chunks
                start_index = 0
                while True:
                    genome_corpus_chunk = corpus_file.read(chunk_size)
                    if not genome_corpus_chunk:
                        break
                    search_corpus_chunk(genome_corpus_chunk, trie_root, chromosome, results, start_index)
                    start_index += len(genome_corpus_chunk)

        # Write the results in the grouped format
        for sequence, positions in results.items():
            output_file.write(f"{sequence}\n")
            for pos in positions:
                output_file.write(f"{pos}\n")
            output_file.write("\n")

    files.download("output.txt")

# Execute main function
main()